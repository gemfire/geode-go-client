// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/clientProtocol.proto

package org_apache_geode_internal_protocol_protobuf_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Message struct {
	// Types that are valid to be assigned to MessageType:
	//	*Message_Request
	//	*Message_Response
	MessageType isMessage_MessageType `protobuf_oneof:"messageType"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isMessage_MessageType interface {
	isMessage_MessageType()
}

type Message_Request struct {
	Request *Request `protobuf:"bytes,1,opt,name=request,oneof"`
}
type Message_Response struct {
	Response *Response `protobuf:"bytes,2,opt,name=response,oneof"`
}

func (*Message_Request) isMessage_MessageType()  {}
func (*Message_Response) isMessage_MessageType() {}

func (m *Message) GetMessageType() isMessage_MessageType {
	if m != nil {
		return m.MessageType
	}
	return nil
}

func (m *Message) GetRequest() *Request {
	if x, ok := m.GetMessageType().(*Message_Request); ok {
		return x.Request
	}
	return nil
}

func (m *Message) GetResponse() *Response {
	if x, ok := m.GetMessageType().(*Message_Response); ok {
		return x.Response
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Request)(nil),
		(*Message_Response)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// messageType
	switch x := m.MessageType.(type) {
	case *Message_Request:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Request); err != nil {
			return err
		}
	case *Message_Response:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Response); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.MessageType has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 1: // messageType.request
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Request)
		err := b.DecodeMessage(msg)
		m.MessageType = &Message_Request{msg}
		return true, err
	case 2: // messageType.response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Response)
		err := b.DecodeMessage(msg)
		m.MessageType = &Message_Response{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// messageType
	switch x := m.MessageType.(type) {
	case *Message_Request:
		s := proto.Size(x.Request)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Response:
		s := proto.Size(x.Response)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Request struct {
	// Types that are valid to be assigned to RequestAPI:
	//	*Request_PutRequest
	//	*Request_GetRequest
	//	*Request_PutAllRequest
	//	*Request_GetAllRequest
	//	*Request_RemoveRequest
	//	*Request_RemoveAllRequest
	//	*Request_GetAvailableServersRequest
	//	*Request_GetRegionNamesRequest
	//	*Request_GetRegionRequest
	//	*Request_AuthenticationRequest
	//	*Request_HandshakeRequest
	RequestAPI isRequest_RequestAPI `protobuf_oneof:"requestAPI"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type isRequest_RequestAPI interface {
	isRequest_RequestAPI()
}

type Request_PutRequest struct {
	PutRequest *PutRequest `protobuf:"bytes,10,opt,name=putRequest,oneof"`
}
type Request_GetRequest struct {
	GetRequest *GetRequest `protobuf:"bytes,11,opt,name=getRequest,oneof"`
}
type Request_PutAllRequest struct {
	PutAllRequest *PutAllRequest `protobuf:"bytes,12,opt,name=putAllRequest,oneof"`
}
type Request_GetAllRequest struct {
	GetAllRequest *GetAllRequest `protobuf:"bytes,13,opt,name=getAllRequest,oneof"`
}
type Request_RemoveRequest struct {
	RemoveRequest *RemoveRequest `protobuf:"bytes,14,opt,name=removeRequest,oneof"`
}
type Request_RemoveAllRequest struct {
	RemoveAllRequest *RemoveAllRequest `protobuf:"bytes,15,opt,name=removeAllRequest,oneof"`
}
type Request_GetAvailableServersRequest struct {
	GetAvailableServersRequest *GetAvailableServersRequest `protobuf:"bytes,40,opt,name=getAvailableServersRequest,oneof"`
}
type Request_GetRegionNamesRequest struct {
	GetRegionNamesRequest *GetRegionNamesRequest `protobuf:"bytes,41,opt,name=getRegionNamesRequest,oneof"`
}
type Request_GetRegionRequest struct {
	GetRegionRequest *GetRegionRequest `protobuf:"bytes,42,opt,name=getRegionRequest,oneof"`
}
type Request_AuthenticationRequest struct {
	AuthenticationRequest *AuthenticationRequest `protobuf:"bytes,100,opt,name=authenticationRequest,oneof"`
}
type Request_HandshakeRequest struct {
	HandshakeRequest *HandshakeRequest `protobuf:"bytes,101,opt,name=handshakeRequest,oneof"`
}

func (*Request_PutRequest) isRequest_RequestAPI()                 {}
func (*Request_GetRequest) isRequest_RequestAPI()                 {}
func (*Request_PutAllRequest) isRequest_RequestAPI()              {}
func (*Request_GetAllRequest) isRequest_RequestAPI()              {}
func (*Request_RemoveRequest) isRequest_RequestAPI()              {}
func (*Request_RemoveAllRequest) isRequest_RequestAPI()           {}
func (*Request_GetAvailableServersRequest) isRequest_RequestAPI() {}
func (*Request_GetRegionNamesRequest) isRequest_RequestAPI()      {}
func (*Request_GetRegionRequest) isRequest_RequestAPI()           {}
func (*Request_AuthenticationRequest) isRequest_RequestAPI()      {}
func (*Request_HandshakeRequest) isRequest_RequestAPI()           {}

func (m *Request) GetRequestAPI() isRequest_RequestAPI {
	if m != nil {
		return m.RequestAPI
	}
	return nil
}

func (m *Request) GetPutRequest() *PutRequest {
	if x, ok := m.GetRequestAPI().(*Request_PutRequest); ok {
		return x.PutRequest
	}
	return nil
}

func (m *Request) GetGetRequest() *GetRequest {
	if x, ok := m.GetRequestAPI().(*Request_GetRequest); ok {
		return x.GetRequest
	}
	return nil
}

func (m *Request) GetPutAllRequest() *PutAllRequest {
	if x, ok := m.GetRequestAPI().(*Request_PutAllRequest); ok {
		return x.PutAllRequest
	}
	return nil
}

func (m *Request) GetGetAllRequest() *GetAllRequest {
	if x, ok := m.GetRequestAPI().(*Request_GetAllRequest); ok {
		return x.GetAllRequest
	}
	return nil
}

func (m *Request) GetRemoveRequest() *RemoveRequest {
	if x, ok := m.GetRequestAPI().(*Request_RemoveRequest); ok {
		return x.RemoveRequest
	}
	return nil
}

func (m *Request) GetRemoveAllRequest() *RemoveAllRequest {
	if x, ok := m.GetRequestAPI().(*Request_RemoveAllRequest); ok {
		return x.RemoveAllRequest
	}
	return nil
}

func (m *Request) GetGetAvailableServersRequest() *GetAvailableServersRequest {
	if x, ok := m.GetRequestAPI().(*Request_GetAvailableServersRequest); ok {
		return x.GetAvailableServersRequest
	}
	return nil
}

func (m *Request) GetGetRegionNamesRequest() *GetRegionNamesRequest {
	if x, ok := m.GetRequestAPI().(*Request_GetRegionNamesRequest); ok {
		return x.GetRegionNamesRequest
	}
	return nil
}

func (m *Request) GetGetRegionRequest() *GetRegionRequest {
	if x, ok := m.GetRequestAPI().(*Request_GetRegionRequest); ok {
		return x.GetRegionRequest
	}
	return nil
}

func (m *Request) GetAuthenticationRequest() *AuthenticationRequest {
	if x, ok := m.GetRequestAPI().(*Request_AuthenticationRequest); ok {
		return x.AuthenticationRequest
	}
	return nil
}

func (m *Request) GetHandshakeRequest() *HandshakeRequest {
	if x, ok := m.GetRequestAPI().(*Request_HandshakeRequest); ok {
		return x.HandshakeRequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Request) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Request_OneofMarshaler, _Request_OneofUnmarshaler, _Request_OneofSizer, []interface{}{
		(*Request_PutRequest)(nil),
		(*Request_GetRequest)(nil),
		(*Request_PutAllRequest)(nil),
		(*Request_GetAllRequest)(nil),
		(*Request_RemoveRequest)(nil),
		(*Request_RemoveAllRequest)(nil),
		(*Request_GetAvailableServersRequest)(nil),
		(*Request_GetRegionNamesRequest)(nil),
		(*Request_GetRegionRequest)(nil),
		(*Request_AuthenticationRequest)(nil),
		(*Request_HandshakeRequest)(nil),
	}
}

func _Request_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Request)
	// requestAPI
	switch x := m.RequestAPI.(type) {
	case *Request_PutRequest:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutRequest); err != nil {
			return err
		}
	case *Request_GetRequest:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRequest); err != nil {
			return err
		}
	case *Request_PutAllRequest:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutAllRequest); err != nil {
			return err
		}
	case *Request_GetAllRequest:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetAllRequest); err != nil {
			return err
		}
	case *Request_RemoveRequest:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveRequest); err != nil {
			return err
		}
	case *Request_RemoveAllRequest:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveAllRequest); err != nil {
			return err
		}
	case *Request_GetAvailableServersRequest:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetAvailableServersRequest); err != nil {
			return err
		}
	case *Request_GetRegionNamesRequest:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRegionNamesRequest); err != nil {
			return err
		}
	case *Request_GetRegionRequest:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRegionRequest); err != nil {
			return err
		}
	case *Request_AuthenticationRequest:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuthenticationRequest); err != nil {
			return err
		}
	case *Request_HandshakeRequest:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HandshakeRequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Request.RequestAPI has unexpected type %T", x)
	}
	return nil
}

func _Request_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Request)
	switch tag {
	case 10: // requestAPI.putRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_PutRequest{msg}
		return true, err
	case 11: // requestAPI.getRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_GetRequest{msg}
		return true, err
	case 12: // requestAPI.putAllRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutAllRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_PutAllRequest{msg}
		return true, err
	case 13: // requestAPI.getAllRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetAllRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_GetAllRequest{msg}
		return true, err
	case 14: // requestAPI.removeRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_RemoveRequest{msg}
		return true, err
	case 15: // requestAPI.removeAllRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveAllRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_RemoveAllRequest{msg}
		return true, err
	case 40: // requestAPI.getAvailableServersRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetAvailableServersRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_GetAvailableServersRequest{msg}
		return true, err
	case 41: // requestAPI.getRegionNamesRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRegionNamesRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_GetRegionNamesRequest{msg}
		return true, err
	case 42: // requestAPI.getRegionRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRegionRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_GetRegionRequest{msg}
		return true, err
	case 100: // requestAPI.authenticationRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuthenticationRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_AuthenticationRequest{msg}
		return true, err
	case 101: // requestAPI.handshakeRequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HandshakeRequest)
		err := b.DecodeMessage(msg)
		m.RequestAPI = &Request_HandshakeRequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Request_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Request)
	// requestAPI
	switch x := m.RequestAPI.(type) {
	case *Request_PutRequest:
		s := proto.Size(x.PutRequest)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetRequest:
		s := proto.Size(x.GetRequest)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_PutAllRequest:
		s := proto.Size(x.PutAllRequest)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetAllRequest:
		s := proto.Size(x.GetAllRequest)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RemoveRequest:
		s := proto.Size(x.RemoveRequest)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_RemoveAllRequest:
		s := proto.Size(x.RemoveAllRequest)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetAvailableServersRequest:
		s := proto.Size(x.GetAvailableServersRequest)
		n += proto.SizeVarint(40<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetRegionNamesRequest:
		s := proto.Size(x.GetRegionNamesRequest)
		n += proto.SizeVarint(41<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_GetRegionRequest:
		s := proto.Size(x.GetRegionRequest)
		n += proto.SizeVarint(42<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_AuthenticationRequest:
		s := proto.Size(x.AuthenticationRequest)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Request_HandshakeRequest:
		s := proto.Size(x.HandshakeRequest)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Response struct {
	// Types that are valid to be assigned to ResponseAPI:
	//	*Response_PutResponse
	//	*Response_GetResponse
	//	*Response_PutAllResponse
	//	*Response_GetAllResponse
	//	*Response_RemoveResponse
	//	*Response_RemoveAllResponse
	//	*Response_GetAvailableServersResponse
	//	*Response_GetRegionNamesResponse
	//	*Response_GetRegionResponse
	//	*Response_AuthenticationResponse
	//	*Response_HandshakeResponse
	//	*Response_ErrorResponse
	ResponseAPI isResponse_ResponseAPI `protobuf_oneof:"responseAPI"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

type isResponse_ResponseAPI interface {
	isResponse_ResponseAPI()
}

type Response_PutResponse struct {
	PutResponse *PutResponse `protobuf:"bytes,10,opt,name=putResponse,oneof"`
}
type Response_GetResponse struct {
	GetResponse *GetResponse `protobuf:"bytes,11,opt,name=getResponse,oneof"`
}
type Response_PutAllResponse struct {
	PutAllResponse *PutAllResponse `protobuf:"bytes,12,opt,name=putAllResponse,oneof"`
}
type Response_GetAllResponse struct {
	GetAllResponse *GetAllResponse `protobuf:"bytes,13,opt,name=getAllResponse,oneof"`
}
type Response_RemoveResponse struct {
	RemoveResponse *RemoveResponse `protobuf:"bytes,14,opt,name=removeResponse,oneof"`
}
type Response_RemoveAllResponse struct {
	RemoveAllResponse *RemoveAllResponse `protobuf:"bytes,15,opt,name=removeAllResponse,oneof"`
}
type Response_GetAvailableServersResponse struct {
	GetAvailableServersResponse *GetAvailableServersResponse `protobuf:"bytes,40,opt,name=getAvailableServersResponse,oneof"`
}
type Response_GetRegionNamesResponse struct {
	GetRegionNamesResponse *GetRegionNamesResponse `protobuf:"bytes,41,opt,name=getRegionNamesResponse,oneof"`
}
type Response_GetRegionResponse struct {
	GetRegionResponse *GetRegionResponse `protobuf:"bytes,42,opt,name=getRegionResponse,oneof"`
}
type Response_AuthenticationResponse struct {
	AuthenticationResponse *AuthenticationResponse `protobuf:"bytes,100,opt,name=authenticationResponse,oneof"`
}
type Response_HandshakeResponse struct {
	HandshakeResponse *HandshakeResponse `protobuf:"bytes,101,opt,name=handshakeResponse,oneof"`
}
type Response_ErrorResponse struct {
	ErrorResponse *ErrorResponse `protobuf:"bytes,1000,opt,name=errorResponse,oneof"`
}

func (*Response_PutResponse) isResponse_ResponseAPI()                 {}
func (*Response_GetResponse) isResponse_ResponseAPI()                 {}
func (*Response_PutAllResponse) isResponse_ResponseAPI()              {}
func (*Response_GetAllResponse) isResponse_ResponseAPI()              {}
func (*Response_RemoveResponse) isResponse_ResponseAPI()              {}
func (*Response_RemoveAllResponse) isResponse_ResponseAPI()           {}
func (*Response_GetAvailableServersResponse) isResponse_ResponseAPI() {}
func (*Response_GetRegionNamesResponse) isResponse_ResponseAPI()      {}
func (*Response_GetRegionResponse) isResponse_ResponseAPI()           {}
func (*Response_AuthenticationResponse) isResponse_ResponseAPI()      {}
func (*Response_HandshakeResponse) isResponse_ResponseAPI()           {}
func (*Response_ErrorResponse) isResponse_ResponseAPI()               {}

func (m *Response) GetResponseAPI() isResponse_ResponseAPI {
	if m != nil {
		return m.ResponseAPI
	}
	return nil
}

func (m *Response) GetPutResponse() *PutResponse {
	if x, ok := m.GetResponseAPI().(*Response_PutResponse); ok {
		return x.PutResponse
	}
	return nil
}

func (m *Response) GetGetResponse() *GetResponse {
	if x, ok := m.GetResponseAPI().(*Response_GetResponse); ok {
		return x.GetResponse
	}
	return nil
}

func (m *Response) GetPutAllResponse() *PutAllResponse {
	if x, ok := m.GetResponseAPI().(*Response_PutAllResponse); ok {
		return x.PutAllResponse
	}
	return nil
}

func (m *Response) GetGetAllResponse() *GetAllResponse {
	if x, ok := m.GetResponseAPI().(*Response_GetAllResponse); ok {
		return x.GetAllResponse
	}
	return nil
}

func (m *Response) GetRemoveResponse() *RemoveResponse {
	if x, ok := m.GetResponseAPI().(*Response_RemoveResponse); ok {
		return x.RemoveResponse
	}
	return nil
}

func (m *Response) GetRemoveAllResponse() *RemoveAllResponse {
	if x, ok := m.GetResponseAPI().(*Response_RemoveAllResponse); ok {
		return x.RemoveAllResponse
	}
	return nil
}

func (m *Response) GetGetAvailableServersResponse() *GetAvailableServersResponse {
	if x, ok := m.GetResponseAPI().(*Response_GetAvailableServersResponse); ok {
		return x.GetAvailableServersResponse
	}
	return nil
}

func (m *Response) GetGetRegionNamesResponse() *GetRegionNamesResponse {
	if x, ok := m.GetResponseAPI().(*Response_GetRegionNamesResponse); ok {
		return x.GetRegionNamesResponse
	}
	return nil
}

func (m *Response) GetGetRegionResponse() *GetRegionResponse {
	if x, ok := m.GetResponseAPI().(*Response_GetRegionResponse); ok {
		return x.GetRegionResponse
	}
	return nil
}

func (m *Response) GetAuthenticationResponse() *AuthenticationResponse {
	if x, ok := m.GetResponseAPI().(*Response_AuthenticationResponse); ok {
		return x.AuthenticationResponse
	}
	return nil
}

func (m *Response) GetHandshakeResponse() *HandshakeResponse {
	if x, ok := m.GetResponseAPI().(*Response_HandshakeResponse); ok {
		return x.HandshakeResponse
	}
	return nil
}

func (m *Response) GetErrorResponse() *ErrorResponse {
	if x, ok := m.GetResponseAPI().(*Response_ErrorResponse); ok {
		return x.ErrorResponse
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Response) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Response_OneofMarshaler, _Response_OneofUnmarshaler, _Response_OneofSizer, []interface{}{
		(*Response_PutResponse)(nil),
		(*Response_GetResponse)(nil),
		(*Response_PutAllResponse)(nil),
		(*Response_GetAllResponse)(nil),
		(*Response_RemoveResponse)(nil),
		(*Response_RemoveAllResponse)(nil),
		(*Response_GetAvailableServersResponse)(nil),
		(*Response_GetRegionNamesResponse)(nil),
		(*Response_GetRegionResponse)(nil),
		(*Response_AuthenticationResponse)(nil),
		(*Response_HandshakeResponse)(nil),
		(*Response_ErrorResponse)(nil),
	}
}

func _Response_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Response)
	// responseAPI
	switch x := m.ResponseAPI.(type) {
	case *Response_PutResponse:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutResponse); err != nil {
			return err
		}
	case *Response_GetResponse:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetResponse); err != nil {
			return err
		}
	case *Response_PutAllResponse:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PutAllResponse); err != nil {
			return err
		}
	case *Response_GetAllResponse:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetAllResponse); err != nil {
			return err
		}
	case *Response_RemoveResponse:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveResponse); err != nil {
			return err
		}
	case *Response_RemoveAllResponse:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RemoveAllResponse); err != nil {
			return err
		}
	case *Response_GetAvailableServersResponse:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetAvailableServersResponse); err != nil {
			return err
		}
	case *Response_GetRegionNamesResponse:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRegionNamesResponse); err != nil {
			return err
		}
	case *Response_GetRegionResponse:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRegionResponse); err != nil {
			return err
		}
	case *Response_AuthenticationResponse:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuthenticationResponse); err != nil {
			return err
		}
	case *Response_HandshakeResponse:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HandshakeResponse); err != nil {
			return err
		}
	case *Response_ErrorResponse:
		b.EncodeVarint(1000<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ErrorResponse); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Response.ResponseAPI has unexpected type %T", x)
	}
	return nil
}

func _Response_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Response)
	switch tag {
	case 10: // responseAPI.putResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_PutResponse{msg}
		return true, err
	case 11: // responseAPI.getResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_GetResponse{msg}
		return true, err
	case 12: // responseAPI.putAllResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PutAllResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_PutAllResponse{msg}
		return true, err
	case 13: // responseAPI.getAllResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetAllResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_GetAllResponse{msg}
		return true, err
	case 14: // responseAPI.removeResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_RemoveResponse{msg}
		return true, err
	case 15: // responseAPI.removeAllResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RemoveAllResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_RemoveAllResponse{msg}
		return true, err
	case 40: // responseAPI.getAvailableServersResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetAvailableServersResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_GetAvailableServersResponse{msg}
		return true, err
	case 41: // responseAPI.getRegionNamesResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRegionNamesResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_GetRegionNamesResponse{msg}
		return true, err
	case 42: // responseAPI.getRegionResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GetRegionResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_GetRegionResponse{msg}
		return true, err
	case 100: // responseAPI.authenticationResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuthenticationResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_AuthenticationResponse{msg}
		return true, err
	case 101: // responseAPI.handshakeResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HandshakeResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_HandshakeResponse{msg}
		return true, err
	case 1000: // responseAPI.errorResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ErrorResponse)
		err := b.DecodeMessage(msg)
		m.ResponseAPI = &Response_ErrorResponse{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Response_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Response)
	// responseAPI
	switch x := m.ResponseAPI.(type) {
	case *Response_PutResponse:
		s := proto.Size(x.PutResponse)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetResponse:
		s := proto.Size(x.GetResponse)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_PutAllResponse:
		s := proto.Size(x.PutAllResponse)
		n += proto.SizeVarint(12<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetAllResponse:
		s := proto.Size(x.GetAllResponse)
		n += proto.SizeVarint(13<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RemoveResponse:
		s := proto.Size(x.RemoveResponse)
		n += proto.SizeVarint(14<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_RemoveAllResponse:
		s := proto.Size(x.RemoveAllResponse)
		n += proto.SizeVarint(15<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetAvailableServersResponse:
		s := proto.Size(x.GetAvailableServersResponse)
		n += proto.SizeVarint(40<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetRegionNamesResponse:
		s := proto.Size(x.GetRegionNamesResponse)
		n += proto.SizeVarint(41<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_GetRegionResponse:
		s := proto.Size(x.GetRegionResponse)
		n += proto.SizeVarint(42<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_AuthenticationResponse:
		s := proto.Size(x.AuthenticationResponse)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_HandshakeResponse:
		s := proto.Size(x.HandshakeResponse)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Response_ErrorResponse:
		s := proto.Size(x.ErrorResponse)
		n += proto.SizeVarint(1000<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ErrorResponse struct {
	Error *Error `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *ErrorResponse) Reset()                    { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()               {}
func (*ErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ErrorResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "org.apache.geode.internal.protocol.protobuf.v1.Message")
	proto.RegisterType((*Request)(nil), "org.apache.geode.internal.protocol.protobuf.v1.Request")
	proto.RegisterType((*Response)(nil), "org.apache.geode.internal.protocol.protobuf.v1.Response")
	proto.RegisterType((*ErrorResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.ErrorResponse")
}

func init() { proto.RegisterFile("v1/clientProtocol.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 714 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xdf, 0x6a, 0x13, 0x41,
	0x14, 0xc6, 0x13, 0x41, 0x53, 0x4f, 0x9a, 0xaa, 0xe3, 0xbf, 0x5a, 0x6f, 0xa4, 0x57, 0xb5, 0x17,
	0x1b, 0xa2, 0x88, 0xa2, 0x28, 0xa6, 0x50, 0xb3, 0xb5, 0x28, 0x61, 0x2b, 0x5e, 0x15, 0xca, 0x64,
	0x73, 0xba, 0x09, 0x6e, 0x77, 0xd2, 0xdd, 0xcd, 0x42, 0x2f, 0x04, 0x1f, 0x40, 0xf0, 0xa9, 0x7c,
	0x14, 0xc1, 0x6b, 0x9f, 0x40, 0xce, 0xec, 0xec, 0x74, 0x76, 0xb3, 0x16, 0x32, 0xf5, 0xae, 0x9d,
	0xec, 0xfc, 0x7e, 0xe7, 0x9b, 0x5d, 0x3e, 0x06, 0xee, 0x67, 0xbd, 0xae, 0x1f, 0x4e, 0x31, 0x4a,
	0x87, 0xb1, 0x48, 0x85, 0x2f, 0x42, 0x67, 0x46, 0x7f, 0x30, 0x47, 0xc4, 0x81, 0xc3, 0x67, 0xdc,
	0x9f, 0xa0, 0x13, 0xa0, 0x18, 0xa3, 0x33, 0x8d, 0x52, 0x8c, 0x23, 0xae, 0x1e, 0xd0, 0x4f, 0x8e,
	0xe6, 0xc7, 0x4e, 0xd6, 0xdb, 0x78, 0x10, 0x08, 0x11, 0x84, 0xd8, 0x2d, 0xd6, 0xba, 0x3c, 0x3a,
	0xcb, 0x1f, 0xd8, 0xb8, 0x9d, 0xf5, 0xba, 0x31, 0x06, 0x53, 0x11, 0x1d, 0xf5, 0x87, 0x7b, 0x6a,
	0xf1, 0x4e, 0xd6, 0xeb, 0x86, 0xc2, 0xe7, 0xa9, 0x88, 0x8d, 0x55, 0x7a, 0x74, 0xc4, 0x93, 0xa9,
	0xff, 0xe9, 0x6c, 0x86, 0x89, 0x5a, 0x94, 0x33, 0x8a, 0x28, 0x42, 0x3f, 0x2d, 0x31, 0x36, 0x7f,
	0x36, 0xa1, 0xf5, 0x01, 0x93, 0x84, 0x07, 0xc8, 0x0e, 0xa0, 0x15, 0xe3, 0xe9, 0x1c, 0x93, 0x74,
	0xbd, 0xf9, 0xa8, 0xb9, 0xd5, 0x7e, 0xf2, 0x7c, 0xc9, 0x04, 0x8e, 0x97, 0x6f, 0x77, 0x1b, 0x5e,
	0x41, 0x62, 0x9f, 0x61, 0x25, 0xc6, 0x64, 0x26, 0xa2, 0x04, 0xd7, 0xaf, 0x48, 0xea, 0x8b, 0xe5,
	0xa9, 0xf9, 0x7e, 0xb7, 0xe1, 0x69, 0xd6, 0x4e, 0x07, 0xda, 0x27, 0xf9, 0xdc, 0x94, 0x73, 0xf3,
	0xd7, 0x75, 0x68, 0x29, 0x3b, 0x3b, 0x04, 0x98, 0xcd, 0x53, 0xf5, 0xdf, 0x3a, 0x48, 0xe9, 0xcb,
	0x65, 0xa5, 0x43, 0x4d, 0x70, 0x1b, 0x9e, 0xc1, 0x23, 0x7a, 0x80, 0x9a, 0xde, 0xb6, 0xa3, 0x0f,
	0xd0, 0xa4, 0x9f, 0xf3, 0x18, 0x42, 0x67, 0x36, 0x4f, 0xfb, 0x61, 0x58, 0x08, 0x56, 0xa5, 0xe0,
	0xb5, 0xc5, 0xf8, 0xe7, 0x10, 0xb7, 0xe1, 0x95, 0xa9, 0xa4, 0x09, 0xd0, 0xd4, 0x74, 0xec, 0x34,
	0x03, 0xac, 0x68, 0x4a, 0x54, 0xd2, 0xc4, 0x78, 0x22, 0x32, 0x2c, 0x34, 0x6b, 0x76, 0x1a, 0xcf,
	0x84, 0x90, 0xa6, 0x44, 0x65, 0x11, 0xdc, 0xcc, 0x17, 0x8c, 0x40, 0x37, 0xa4, 0xe9, 0xad, 0x9d,
	0xa9, 0x94, 0x69, 0x81, 0xcd, 0xbe, 0x37, 0x61, 0x83, 0x82, 0x66, 0x7c, 0x1a, 0xf2, 0x51, 0x88,
	0x07, 0x18, 0x67, 0x18, 0x27, 0x85, 0x7a, 0x4b, 0xaa, 0xdf, 0xdb, 0x9c, 0x65, 0x3d, 0xd1, 0x6d,
	0x78, 0x17, 0xf8, 0xd8, 0x57, 0xb8, 0x2b, 0xbf, 0x20, 0xaa, 0x87, 0x8f, 0xfc, 0x04, 0xf5, 0x20,
	0x8f, 0xe5, 0x20, 0xbb, 0x56, 0x1f, 0x67, 0x15, 0xe6, 0x36, 0xbc, 0x7a, 0x0b, 0x9d, 0xbe, 0xfe,
	0xa1, 0x30, 0x6f, 0xdb, 0x9d, 0xfe, 0xa0, 0xc2, 0xa1, 0xd3, 0xaf, 0xb2, 0x29, 0x2e, 0x9f, 0xa7,
	0x13, 0x8c, 0xd2, 0xa9, 0xcf, 0x53, 0x43, 0x3a, 0xb6, 0x8b, 0xdb, 0xaf, 0x83, 0x51, 0xdc, 0x5a,
	0x0b, 0xc5, 0x9d, 0xf0, 0x68, 0x9c, 0x4c, 0xf8, 0x17, 0xfd, 0x59, 0xa3, 0x5d, 0x5c, 0xb7, 0xc2,
	0xa1, 0xb8, 0x55, 0xf6, 0xce, 0x2a, 0x80, 0xea, 0xd2, 0xfe, 0x70, 0x6f, 0xf3, 0x0f, 0xc0, 0x4a,
	0xd1, 0x87, 0xec, 0x08, 0xda, 0xb2, 0x98, 0x54, 0xbd, 0xe6, 0x4d, 0xf7, 0xca, 0xaa, 0xe9, 0x74,
	0xc3, 0x9a, 0x44, 0x12, 0xc8, 0xe3, 0x57, 0x82, 0xb6, 0x9d, 0x60, 0x80, 0x25, 0x81, 0x41, 0x64,
	0x13, 0x58, 0x2b, 0x8a, 0x49, 0x39, 0xf2, 0xbe, 0x7b, 0x63, 0xdb, 0x77, 0x5a, 0x53, 0xe1, 0x92,
	0xa9, 0xe8, 0x26, 0x65, 0xea, 0xd8, 0x99, 0x06, 0x58, 0x35, 0x95, 0xb9, 0x64, 0x2a, 0xea, 0x49,
	0x99, 0xd6, 0xec, 0x4c, 0x5e, 0x89, 0x42, 0xa6, 0x32, 0x97, 0x9d, 0xc2, 0x2d, 0xa3, 0x9b, 0x94,
	0x2c, 0x2f, 0xbe, 0xfe, 0x25, 0x8a, 0x4f, 0xfb, 0x16, 0xe9, 0xec, 0x47, 0x13, 0x1e, 0xd6, 0x56,
	0x91, 0xb2, 0xe7, 0xdd, 0xb7, 0xff, 0x5f, 0xba, 0x4f, 0xcf, 0x71, 0x91, 0x91, 0x7d, 0x6b, 0xc2,
	0xbd, 0x6a, 0x31, 0xa9, 0x61, 0xf2, 0xfe, 0x7b, 0x77, 0xd9, 0xfe, 0xd3, 0x73, 0xfc, 0xc3, 0x43,
	0xef, 0xc1, 0x68, 0x29, 0x25, 0xdf, 0xb6, 0x7b, 0x0f, 0x83, 0x2a, 0x88, 0xde, 0xc3, 0x02, 0x5d,
	0xa6, 0xae, 0xf6, 0x93, 0x12, 0x8f, 0xed, 0x52, 0xf7, 0x6b, 0x69, 0x94, 0xba, 0xde, 0x43, 0xa9,
	0x8d, 0xb2, 0x52, 0x72, 0xb4, 0x4b, 0xed, 0x56, 0x41, 0x94, 0x7a, 0x81, 0xce, 0x8e, 0xa1, 0x83,
	0x71, 0x2c, 0x62, 0xad, 0xfb, 0xdd, 0xb2, 0xbb, 0x50, 0xec, 0x9a, 0x14, 0xba, 0x50, 0x94, 0xb0,
	0x74, 0xb9, 0x2c, 0x2e, 0x9a, 0x54, 0xba, 0x87, 0xd0, 0x29, 0x6d, 0x60, 0xfb, 0x70, 0x55, 0x6e,
	0x50, 0xf7, 0xe4, 0x67, 0x76, 0xfa, 0x9c, 0x31, 0xba, 0x26, 0x7f, 0x79, 0xfa, 0x37, 0x00, 0x00,
	0xff, 0xff, 0xe2, 0xb7, 0x7c, 0x76, 0x48, 0x0c, 0x00, 0x00,
}
