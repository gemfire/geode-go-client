// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/region_API.proto

package org_apache_geode_internal_protocol_protobuf_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PutRequest struct {
	RegionName string `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
	Entry      *Entry `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *PutRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *PutRequest) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type PutResponse struct {
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type GetRequest struct {
	RegionName string        `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
	Key        *EncodedValue `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *GetRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *GetRequest) GetKey() *EncodedValue {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	Result *EncodedValue `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *GetResponse) GetResult() *EncodedValue {
	if m != nil {
		return m.Result
	}
	return nil
}

type PutAllRequest struct {
	RegionName string   `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
	Entry      []*Entry `protobuf:"bytes,2,rep,name=entry" json:"entry,omitempty"`
}

func (m *PutAllRequest) Reset()                    { *m = PutAllRequest{} }
func (m *PutAllRequest) String() string            { return proto.CompactTextString(m) }
func (*PutAllRequest) ProtoMessage()               {}
func (*PutAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *PutAllRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *PutAllRequest) GetEntry() []*Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type PutAllResponse struct {
	FailedKeys []*KeyedError `protobuf:"bytes,1,rep,name=failedKeys" json:"failedKeys,omitempty"`
}

func (m *PutAllResponse) Reset()                    { *m = PutAllResponse{} }
func (m *PutAllResponse) String() string            { return proto.CompactTextString(m) }
func (*PutAllResponse) ProtoMessage()               {}
func (*PutAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *PutAllResponse) GetFailedKeys() []*KeyedError {
	if m != nil {
		return m.FailedKeys
	}
	return nil
}

type GetAllRequest struct {
	RegionName  string          `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
	Key         []*EncodedValue `protobuf:"bytes,2,rep,name=key" json:"key,omitempty"`
	CallbackArg *EncodedValue   `protobuf:"bytes,3,opt,name=callbackArg" json:"callbackArg,omitempty"`
}

func (m *GetAllRequest) Reset()                    { *m = GetAllRequest{} }
func (m *GetAllRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllRequest) ProtoMessage()               {}
func (*GetAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

func (m *GetAllRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *GetAllRequest) GetKey() []*EncodedValue {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *GetAllRequest) GetCallbackArg() *EncodedValue {
	if m != nil {
		return m.CallbackArg
	}
	return nil
}

type GetAllResponse struct {
	Entries  []*Entry      `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	Failures []*KeyedError `protobuf:"bytes,2,rep,name=failures" json:"failures,omitempty"`
}

func (m *GetAllResponse) Reset()                    { *m = GetAllResponse{} }
func (m *GetAllResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllResponse) ProtoMessage()               {}
func (*GetAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *GetAllResponse) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *GetAllResponse) GetFailures() []*KeyedError {
	if m != nil {
		return m.Failures
	}
	return nil
}

type RemoveRequest struct {
	RegionName string        `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
	Key        *EncodedValue `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *RemoveRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

func (m *RemoveRequest) GetKey() *EncodedValue {
	if m != nil {
		return m.Key
	}
	return nil
}

type RemoveResponse struct {
}

func (m *RemoveResponse) Reset()                    { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()               {}
func (*RemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

type GetRegionNamesRequest struct {
}

func (m *GetRegionNamesRequest) Reset()                    { *m = GetRegionNamesRequest{} }
func (m *GetRegionNamesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRegionNamesRequest) ProtoMessage()               {}
func (*GetRegionNamesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

type GetRegionNamesResponse struct {
	Regions []string `protobuf:"bytes,1,rep,name=regions" json:"regions,omitempty"`
}

func (m *GetRegionNamesResponse) Reset()                    { *m = GetRegionNamesResponse{} }
func (m *GetRegionNamesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRegionNamesResponse) ProtoMessage()               {}
func (*GetRegionNamesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

func (m *GetRegionNamesResponse) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

type GetSizeRequest struct {
	RegionName string `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
}

func (m *GetSizeRequest) Reset()                    { *m = GetSizeRequest{} }
func (m *GetSizeRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSizeRequest) ProtoMessage()               {}
func (*GetSizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

func (m *GetSizeRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

type GetSizeResponse struct {
	Size int32 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
}

func (m *GetSizeResponse) Reset()                    { *m = GetSizeResponse{} }
func (m *GetSizeResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSizeResponse) ProtoMessage()               {}
func (*GetSizeResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

func (m *GetSizeResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type OQLQueryRequest struct {
	Query         string          `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	BindParameter []*EncodedValue `protobuf:"bytes,2,rep,name=bindParameter" json:"bindParameter,omitempty"`
}

func (m *OQLQueryRequest) Reset()                    { *m = OQLQueryRequest{} }
func (m *OQLQueryRequest) String() string            { return proto.CompactTextString(m) }
func (*OQLQueryRequest) ProtoMessage()               {}
func (*OQLQueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

func (m *OQLQueryRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *OQLQueryRequest) GetBindParameter() []*EncodedValue {
	if m != nil {
		return m.BindParameter
	}
	return nil
}

// Response to an OQL query. Depending on the query,
// it may return a single value, a list of values, or a table
// of values.
type OQLQueryResponse struct {
	// Types that are valid to be assigned to Result:
	//	*OQLQueryResponse_SingleResult
	//	*OQLQueryResponse_ListResult
	//	*OQLQueryResponse_TableResult
	Result isOQLQueryResponse_Result `protobuf_oneof:"result"`
}

func (m *OQLQueryResponse) Reset()                    { *m = OQLQueryResponse{} }
func (m *OQLQueryResponse) String() string            { return proto.CompactTextString(m) }
func (*OQLQueryResponse) ProtoMessage()               {}
func (*OQLQueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

type isOQLQueryResponse_Result interface {
	isOQLQueryResponse_Result()
}

type OQLQueryResponse_SingleResult struct {
	SingleResult *EncodedValue `protobuf:"bytes,1,opt,name=singleResult,oneof"`
}
type OQLQueryResponse_ListResult struct {
	ListResult *EncodedValueList `protobuf:"bytes,2,opt,name=listResult,oneof"`
}
type OQLQueryResponse_TableResult struct {
	TableResult *Table `protobuf:"bytes,3,opt,name=tableResult,oneof"`
}

func (*OQLQueryResponse_SingleResult) isOQLQueryResponse_Result() {}
func (*OQLQueryResponse_ListResult) isOQLQueryResponse_Result()   {}
func (*OQLQueryResponse_TableResult) isOQLQueryResponse_Result()  {}

func (m *OQLQueryResponse) GetResult() isOQLQueryResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *OQLQueryResponse) GetSingleResult() *EncodedValue {
	if x, ok := m.GetResult().(*OQLQueryResponse_SingleResult); ok {
		return x.SingleResult
	}
	return nil
}

func (m *OQLQueryResponse) GetListResult() *EncodedValueList {
	if x, ok := m.GetResult().(*OQLQueryResponse_ListResult); ok {
		return x.ListResult
	}
	return nil
}

func (m *OQLQueryResponse) GetTableResult() *Table {
	if x, ok := m.GetResult().(*OQLQueryResponse_TableResult); ok {
		return x.TableResult
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*OQLQueryResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _OQLQueryResponse_OneofMarshaler, _OQLQueryResponse_OneofUnmarshaler, _OQLQueryResponse_OneofSizer, []interface{}{
		(*OQLQueryResponse_SingleResult)(nil),
		(*OQLQueryResponse_ListResult)(nil),
		(*OQLQueryResponse_TableResult)(nil),
	}
}

func _OQLQueryResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*OQLQueryResponse)
	// result
	switch x := m.Result.(type) {
	case *OQLQueryResponse_SingleResult:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SingleResult); err != nil {
			return err
		}
	case *OQLQueryResponse_ListResult:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListResult); err != nil {
			return err
		}
	case *OQLQueryResponse_TableResult:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TableResult); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("OQLQueryResponse.Result has unexpected type %T", x)
	}
	return nil
}

func _OQLQueryResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*OQLQueryResponse)
	switch tag {
	case 1: // result.singleResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EncodedValue)
		err := b.DecodeMessage(msg)
		m.Result = &OQLQueryResponse_SingleResult{msg}
		return true, err
	case 2: // result.listResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EncodedValueList)
		err := b.DecodeMessage(msg)
		m.Result = &OQLQueryResponse_ListResult{msg}
		return true, err
	case 3: // result.tableResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Table)
		err := b.DecodeMessage(msg)
		m.Result = &OQLQueryResponse_TableResult{msg}
		return true, err
	default:
		return false, nil
	}
}

func _OQLQueryResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*OQLQueryResponse)
	// result
	switch x := m.Result.(type) {
	case *OQLQueryResponse_SingleResult:
		s := proto.Size(x.SingleResult)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OQLQueryResponse_ListResult:
		s := proto.Size(x.ListResult)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *OQLQueryResponse_TableResult:
		s := proto.Size(x.TableResult)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type KeySetRequest struct {
	RegionName string `protobuf:"bytes,1,opt,name=regionName" json:"regionName,omitempty"`
}

func (m *KeySetRequest) Reset()                    { *m = KeySetRequest{} }
func (m *KeySetRequest) String() string            { return proto.CompactTextString(m) }
func (*KeySetRequest) ProtoMessage()               {}
func (*KeySetRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{16} }

func (m *KeySetRequest) GetRegionName() string {
	if m != nil {
		return m.RegionName
	}
	return ""
}

type KeySetResponse struct {
	Keys []*EncodedValue `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *KeySetResponse) Reset()                    { *m = KeySetResponse{} }
func (m *KeySetResponse) String() string            { return proto.CompactTextString(m) }
func (*KeySetResponse) ProtoMessage()               {}
func (*KeySetResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{17} }

func (m *KeySetResponse) GetKeys() []*EncodedValue {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*PutRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.PutResponse")
	proto.RegisterType((*GetRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetResponse")
	proto.RegisterType((*PutAllRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.PutAllRequest")
	proto.RegisterType((*PutAllResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.PutAllResponse")
	proto.RegisterType((*GetAllRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetAllRequest")
	proto.RegisterType((*GetAllResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetAllResponse")
	proto.RegisterType((*RemoveRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.RemoveResponse")
	proto.RegisterType((*GetRegionNamesRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesRequest")
	proto.RegisterType((*GetRegionNamesResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetRegionNamesResponse")
	proto.RegisterType((*GetSizeRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetSizeRequest")
	proto.RegisterType((*GetSizeResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.GetSizeResponse")
	proto.RegisterType((*OQLQueryRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.OQLQueryRequest")
	proto.RegisterType((*OQLQueryResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.OQLQueryResponse")
	proto.RegisterType((*KeySetRequest)(nil), "org.apache.geode.internal.protocol.protobuf.v1.KeySetRequest")
	proto.RegisterType((*KeySetResponse)(nil), "org.apache.geode.internal.protocol.protobuf.v1.KeySetResponse")
}

func init() { proto.RegisterFile("v1/region_API.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x95, 0x4d, 0x6b, 0xdb, 0x30,
	0x18, 0xc7, 0xe3, 0xa6, 0xe9, 0xcb, 0x93, 0x39, 0x2d, 0xde, 0x5b, 0xd8, 0x61, 0x14, 0xc1, 0xa0,
	0x27, 0x77, 0xed, 0xd8, 0x65, 0xec, 0xb0, 0x0c, 0x4a, 0x33, 0x52, 0xda, 0x54, 0x0d, 0x85, 0xed,
	0xb0, 0x21, 0xdb, 0x4f, 0x33, 0x11, 0xc5, 0x4e, 0x25, 0x39, 0xe0, 0x52, 0xd8, 0x07, 0xd8, 0x27,
	0xda, 0x69, 0x1f, 0x65, 0x5f, 0x65, 0xd8, 0x96, 0xd2, 0x74, 0xa7, 0xbc, 0xc1, 0x6e, 0x96, 0x65,
	0xfd, 0xfe, 0xff, 0xe7, 0xff, 0x58, 0x12, 0x3c, 0x1e, 0x1f, 0x1e, 0x48, 0xec, 0xf3, 0x24, 0xfe,
	0xd6, 0xea, 0x7e, 0xf2, 0x47, 0x32, 0xd1, 0x89, 0xe7, 0x27, 0xb2, 0xef, 0xb3, 0x11, 0x0b, 0xbf,
	0xa3, 0xdf, 0xc7, 0x24, 0x42, 0x9f, 0xc7, 0x1a, 0x65, 0xcc, 0x44, 0xf9, 0x41, 0x98, 0x98, 0x87,
	0x20, 0xbd, 0xf6, 0xc7, 0x87, 0x2f, 0x72, 0x48, 0xc0, 0x14, 0x0f, 0x7b, 0xd9, 0x08, 0x55, 0x39,
	0x45, 0x32, 0x80, 0x6e, 0xaa, 0x29, 0xde, 0xa4, 0xa8, 0xb4, 0xf7, 0x12, 0xa0, 0x94, 0x39, 0x63,
	0x43, 0x6c, 0x3a, 0x7b, 0xce, 0xfe, 0x36, 0x9d, 0x7a, 0xe3, 0x75, 0xa0, 0x86, 0xb1, 0x96, 0x59,
	0x73, 0x6d, 0xcf, 0xd9, 0xaf, 0x1f, 0xbd, 0x9d, 0xd3, 0x82, 0x7f, 0x9c, 0x2f, 0xa6, 0x25, 0x83,
	0xb8, 0x50, 0x2f, 0xa4, 0xd5, 0x28, 0x89, 0x15, 0x92, 0x3b, 0x80, 0x13, 0x9c, 0xd9, 0xc9, 0x19,
	0x54, 0x07, 0x68, 0x7d, 0xbc, 0x9f, 0xdf, 0x47, 0x98, 0x44, 0x18, 0x5d, 0x31, 0x91, 0x22, 0xcd,
	0x41, 0x24, 0x84, 0x7a, 0xa1, 0x5e, 0x9a, 0xf1, 0x7a, 0xb0, 0x21, 0x51, 0xa5, 0x42, 0x17, 0xd2,
	0xcb, 0x2a, 0x18, 0x16, 0xb9, 0x03, 0xb7, 0x9b, 0xea, 0x96, 0x10, 0x0b, 0xe4, 0x5d, 0x5d, 0x3a,
	0x6f, 0x01, 0x0d, 0xab, 0x6e, 0xaa, 0xfc, 0x02, 0x70, 0xcd, 0xb8, 0xc0, 0xa8, 0x83, 0x99, 0x6a,
	0x3a, 0x85, 0xc6, 0xbb, 0x79, 0x35, 0x3a, 0x98, 0x61, 0x74, 0x2c, 0x65, 0x22, 0xe9, 0x14, 0x8d,
	0xfc, 0x71, 0xc0, 0x3d, 0xc1, 0x79, 0x8a, 0x9d, 0xb4, 0xb4, 0xba, 0x92, 0x96, 0x7a, 0x5f, 0xa1,
	0x1e, 0x32, 0x21, 0x02, 0x16, 0x0e, 0x5a, 0xb2, 0xdf, 0xac, 0xae, 0xa0, 0x91, 0xd3, 0x40, 0xf2,
	0xcb, 0x81, 0x86, 0xad, 0xd0, 0x04, 0x7a, 0x0e, 0x9b, 0x79, 0xd6, 0x1c, 0x6d, 0x9a, 0x0b, 0x76,
	0xcc, 0x52, 0xbc, 0x2b, 0xd8, 0xca, 0x33, 0x4d, 0x25, 0x2a, 0x13, 0xcc, 0x32, 0xfd, 0x99, 0xb0,
	0xc8, 0x0f, 0x70, 0x29, 0x0e, 0x93, 0x31, 0xfe, 0xaf, 0xfd, 0xb6, 0x0b, 0x0d, 0x6b, 0xc0, 0xec,
	0xff, 0xe7, 0xf0, 0xb4, 0xd8, 0x81, 0x56, 0x52, 0x19, 0x6b, 0xe4, 0x08, 0x9e, 0xfd, 0x3b, 0x61,
	0xe2, 0x6e, 0xc2, 0x66, 0x69, 0xb1, 0x8c, 0x7b, 0x9b, 0xda, 0x21, 0x79, 0x5d, 0xb4, 0xe6, 0x92,
	0xdf, 0xce, 0x5a, 0x20, 0x79, 0x05, 0x3b, 0x93, 0x15, 0x06, 0xef, 0xc1, 0xba, 0xe2, 0xb7, 0xe5,
	0xc7, 0x35, 0x5a, 0x3c, 0x93, 0x9f, 0x0e, 0xec, 0x9c, 0x5f, 0x9c, 0x5e, 0xa4, 0x28, 0x33, 0x8b,
	0x7e, 0x02, 0xb5, 0x9b, 0x7c, 0x6c, 0xa8, 0xe5, 0xc0, 0x0b, 0xc0, 0x0d, 0x78, 0x1c, 0x75, 0x99,
	0x64, 0x43, 0xd4, 0x28, 0x57, 0xf2, 0x63, 0x3f, 0x44, 0x92, 0xdf, 0x6b, 0xb0, 0x7b, 0xef, 0xc6,
	0xd8, 0x0e, 0xe0, 0x91, 0xe2, 0x71, 0x5f, 0xe4, 0x85, 0xac, 0xe8, 0x04, 0x6b, 0x57, 0xe8, 0x03,
	0xa6, 0x17, 0x00, 0x08, 0xae, 0xb4, 0x51, 0x28, 0xff, 0x8a, 0x0f, 0xcb, 0x28, 0x9c, 0x72, 0xa5,
	0xdb, 0x15, 0x3a, 0x45, 0xf5, 0x3e, 0x43, 0x5d, 0xb3, 0x60, 0x52, 0x46, 0x75, 0xb1, 0x2b, 0xa7,
	0x97, 0x23, 0xda, 0x15, 0x3a, 0xcd, 0xfa, 0xb8, 0x65, 0x8f, 0x77, 0x72, 0x00, 0x6e, 0x07, 0xb3,
	0xcb, 0x99, 0x2f, 0x1e, 0x12, 0x40, 0xc3, 0x2e, 0x30, 0x79, 0x77, 0x61, 0x7d, 0x70, 0x7f, 0x7e,
	0x2e, 0xd7, 0xdf, 0x82, 0x14, 0x6c, 0x14, 0xf3, 0x6f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x82,
	0xfe, 0x92, 0xb9, 0xf7, 0x07, 0x00, 0x00,
}
